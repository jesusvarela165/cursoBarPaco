<?php

namespace AppBundle\Controller;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

use AppBundle\Entity\Tapa;
use AppBundle\Entity\Categoria;
use AppBundle\Entity\Ingrediente;
use AppBundle\Form\TapaType;
use AppBundle\Form\CategoriaType;
use AppBundle\Form\IngredienteType;

/**
 * @Route("/gestionTapas")
 */
class GestionTapasController extends Controller
{
  /**
   * @Route("/nuevaTapa", name="nuevaTapa")
   */
  public function nuevaTapaAction(Request $request)
  {
      $tapa = new Tapa();
      //Construyendo el formulario
      $form = $this->createForm(TapaType::class,$tapa);
      $form->handleRequest($request);
      if ($form->isSubmitted() && $form->isValid()) {
          //Recogemos la info de la tapa
          $tapa = $form->getData();
          $fotoFile= $tapa->getFoto();
          $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
          // moves the file to the directory where brochures are stored
          $fotoFile->move(
              $this->getParameter('tapaImg_directory'),
              $fileName
          );
          $tapa->setFoto($fileName);
          $tapa->setFechaCreacion(new \DateTime());
          //Almacenamos
          $em= $this->getDoctrine()->getMAnager();
          $em->persist($tapa);
          $em->flush();
          return $this->redirectToRoute('tapa',array('id'=>$tapa->getId()));
      }

      // replace this example code with whatever you need
      return $this->render('gestion/nuevaTapa.html.twig',array('form'=>$form->createView()));
  }
  /**
   * @Route("/nuevaCategoria", name="nuevaCategoria")
   */
  public function nuevaCategoriaAction(Request $request)
  {
    $categoria = new Categoria();
    //Construyendo el formulario
    $form = $this->createForm(CategoriaType::class,$categoria);
    $form->handleRequest($request);
    if ($form->isSubmitted() && $form->isValid()) {
        //Recogemos la info de la tapa
        $categoria = $form->getData();
        $fotoFile= $categoria->getFoto();
        $fileName = $this->generateUniqueFileName().'.'.$fotoFile->guessExtension();
        // moves the file to the directory where brochures are stored
        $fotoFile->move(
            $this->getParameter('tapaImg_directory'),
            $fileName
        );
        $categoria->setFoto($fileName);
        //Almacenamos
        $em= $this->getDoctrine()->getMAnager();
        $em->persist($categoria);
        $em->flush();
        return $this->redirectToRoute('categoria',array('id'=>$categoria->getId()));
    }

    // replace this example code with whatever you need
    return $this->render('gestion/nuevaCategoria.html.twig',array('form'=>$form->createView()));
  }
  /**
   * @Route("/nuevoIngrediente", name="nuevaIngrediente")
   */
  public function nuevoIngredienteAction(Request $request)
  {
    $ingrediente = new Ingrediente();
    //Construyendo el formulario
    $form = $this->createForm(IngredienteType::class,$ingrediente);
    $form->handleRequest($request);
    if ($form->isSubmitted() && $form->isValid()) {
        //Recogemos la info de la tapa
        $ingrediente = $form->getData();
        //Almacenamos
        $em= $this->getDoctrine()->getMAnager();
        $em->persist($ingrediente);
        $em->flush();
        return $this->redirectToRoute('ingrediente',array('id'=>$ingrediente->getId()));
    }

    // replace this example code with whatever you need
    return $this->render('gestion/nuevoIngrediente.html.twig',array('form'=>$form->createView()));
  }
  /**
  * @return string
  */
  private function generateUniqueFileName()
  {
      // md5() reduces the similarity of the file names generated by
      // uniqid(), which is based on timestamps
      return md5(uniqid());
  }
}
